// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projet_dotnet.Data;

#nullable disable

namespace projet_dotnet.Migrations
{
    [DbContext(typeof(Projet_dotnetContext))]
    [Migration("20240111024915_mg-4")]
    partial class mg4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projet_dotnet.Models.Enseignant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Enseignant");
                });

            modelBuilder.Entity("projet_dotnet.Models.Etudiant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateNaiss")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Etudiant");
                });

            modelBuilder.Entity("projet_dotnet.Models.Pfe", b =>
                {
                    b.Property<int>("PfeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PfeId"));

                    b.Property<DateTime>("DateD")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateF")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EncadrantID")
                        .HasColumnType("int");

                    b.Property<int>("SocieteID")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PfeId");

                    b.HasIndex("EncadrantID");

                    b.HasIndex("SocieteID");

                    b.ToTable("Pfe");
                });

            modelBuilder.Entity("projet_dotnet.Models.Pfe_Etudiant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<int>("PfeId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EtudiantId");

                    b.HasIndex("PfeId");

                    b.ToTable("Pfe_Etudiant");
                });

            modelBuilder.Entity("projet_dotnet.Models.Societe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lib")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Societe");
                });

            modelBuilder.Entity("projet_dotnet.Models.Pfe", b =>
                {
                    b.HasOne("projet_dotnet.Models.Enseignant", "Encadrant")
                        .WithMany()
                        .HasForeignKey("EncadrantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projet_dotnet.Models.Societe", "Societe")
                        .WithMany()
                        .HasForeignKey("SocieteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encadrant");

                    b.Navigation("Societe");
                });

            modelBuilder.Entity("projet_dotnet.Models.Pfe_Etudiant", b =>
                {
                    b.HasOne("projet_dotnet.Models.Etudiant", "Etudiant")
                        .WithMany()
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projet_dotnet.Models.Pfe", "Pfe")
                        .WithMany()
                        .HasForeignKey("PfeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Etudiant");

                    b.Navigation("Pfe");
                });
#pragma warning restore 612, 618
        }
    }
}
